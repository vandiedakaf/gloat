buildscript {
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'com.github.kt3k.coveralls' version '2.8.1'
    id 'java'
    id 'jacoco'
    id 'org.flywaydb.flyway' version '4.0.3'
    id 'org.sonarqube' version '2.6'
    id 'org.springframework.boot' version '1.5.8.RELEASE'
}

jar {
    baseName = 'gloat'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    springCloudVersion = 'Dalston.SR4'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-thymeleaf")

    compile("org.springframework.cloud:spring-cloud-starter-zipkin")

    // dependencies managed by spring boot parent
    compile('mysql:mysql-connector-java')
    compile('com.google.code.gson:gson')
    compile('org.flywaydb:flyway-core')
    compile('org.projectlombok:lombok')

    // dependencies NOT managed by spring boot
    compile('com.github.seratch:jslack:1.0.5')

    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile('org.meanbean:meanbean:2.0.3')
    testCompile('org.jmockit:jmockit:1.28')
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

sonarqube {
    properties {
        property "sonar.projectName", "Gloat"
        // must be unique in a given SonarQube instance
        property "sonar.projectKey", "gloat"
        property "sonar.projectVersion", "${project.version}"
    }
}

// https://vorba.ch/2015/java-gradle-travis-jacoco-codecov.html
// "Also the check task, which is run by Travis, needs to depend on jacocoTestReport"
check.dependsOn jacocoTestReport

task setupEnv(type: Exec, dependsOn: 'dockerComposeStop') {
    group = 'setup'

    executable = 'docker-compose'
    args = ['-f', 'docker-compose.yml', 'up', '-d']
}

task dockerComposeStop(type: Exec) {
    group = 'setup'

    executable = 'docker-compose'
    args = ['-f', 'docker-compose.yml', 'stop']
}